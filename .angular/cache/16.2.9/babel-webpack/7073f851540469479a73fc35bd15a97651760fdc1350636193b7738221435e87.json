{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/produtos.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class CadastrarProdutosComponent {\n  constructor(produtosService) {\n    this.produtosService = produtosService;\n  }\n  ngOnInit() {\n    this.produtoForm = new FormGroup({\n      nome: new FormControl('', Validators.required),\n      id: new FormControl('', Validators.required),\n      preco: new FormControl('', Validators.required),\n      codigoBarras: new FormControl('', Validators.required)\n    });\n  }\n  enviar() {\n    const nomeControl = this.produtoForm.get('nome');\n    const codigoBarrasControl = this.produtoForm.get('codigoBarras');\n    const precoControl = this.produtoForm.get('preco');\n    if (codigoBarrasControl && precoControl) {\n      const produto = {\n        nome: nomeControl.value ? nomeControl.value : undefined,\n        codigoBarras: codigoBarrasControl.value ? +codigoBarrasControl.value : undefined,\n        preco: precoControl.value ? +precoControl.value : undefined\n      };\n      console.log(produto);\n      return;\n      this.produtosService.cadastrarProdutos(produto).subscribe(result => {\n        Swal.fire('Confirmado', 'Produto cadastrado com sucesso', 'success');\n        console.log(result);\n      }, error => {\n        const {\n          message\n        } = error;\n        console.error(error);\n        Swal.fire('ALGO ESTÁ ERRADO', message, 'error');\n      });\n    }\n  }\n  static #_ = this.ɵfac = function CadastrarProdutosComponent_Factory(t) {\n    return new (t || CadastrarProdutosComponent)(i0.ɵɵdirectiveInject(i1.ProdutosService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CadastrarProdutosComponent,\n    selectors: [[\"app-cadastrar-produtos\"]],\n    decls: 21,\n    vars: 1,\n    consts: [[1, \"mt-3\", \"mb-3\"], [3, \"formGroup\", \"submit\"], [1, \"container\"], [1, \"row\"], [1, \"col\"], [1, \"mb-3\"], [\"for\", \"nome\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"nome\", \"formControlName\", \"nome\", 1, \"form-control\"], [\"for\", \"idade\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"codigoBarras\", \"formControlName\", \"codigoBarras\", 1, \"form-control\"], [\"type\", \"number\", \"id\", \"preco\", \"formControlName\", \"preco\", 1, \"form-control\"], [\"routerLink\", \"/produtos\", 1, \"btn\", \"btn-secondary\", \"me-1\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function CadastrarProdutosComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Cadastrar Produtos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 1);\n        i0.ɵɵlistener(\"submit\", function CadastrarProdutosComponent_Template_form_submit_2_listener() {\n          return ctx.enviar();\n        });\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Nome do Produto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 7);\n        i0.ɵɵelementStart(10, \"label\", 8);\n        i0.ɵɵtext(11, \"codigoBarras\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 9);\n        i0.ɵɵelementStart(13, \"label\", 8);\n        i0.ɵɵtext(14, \"Pre\\u00E7o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(16, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"a\", 11);\n        i0.ɵɵtext(18, \"Voltar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 12);\n        i0.ɵɵtext(20, \"Confirmar\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.produtoForm);\n      }\n    },\n    dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","Swal","CadastrarProdutosComponent","constructor","produtosService","ngOnInit","produtoForm","nome","required","id","preco","codigoBarras","enviar","nomeControl","get","codigoBarrasControl","precoControl","produto","value","undefined","console","log","cadastrarProdutos","subscribe","result","fire","error","message","_","i0","ɵɵdirectiveInject","i1","ProdutosService","_2","selectors","decls","vars","consts","template","CadastrarProdutosComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CadastrarProdutosComponent_Template_form_submit_2_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\temp\\angular\\projeto-angular\\src\\app\\pages\\cadastrar-produtos\\cadastrar-produtos.component.ts","C:\\temp\\angular\\projeto-angular\\src\\app\\pages\\cadastrar-produtos\\cadastrar-produtos.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { IProdutos } from 'src/app/interfaces/produtos';\nimport { ProdutosService } from 'src/app/service/produtos.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-cadastrar-produtos',\n  templateUrl: './cadastrar-produtos.component.html',\n  styleUrls: ['./cadastrar-produtos.component.css'],\n})\n\nexport class CadastrarProdutosComponent implements OnInit {\n\n\n  produtoForm: Object|any;\n\n  constructor(private produtosService: ProdutosService) {}\n\n  ngOnInit(): void {\n    this.produtoForm = new FormGroup({\n      nome: new FormControl('', Validators.required),\n      id: new FormControl('', Validators.required),\n      preco: new FormControl('', Validators.required),\n      codigoBarras: new FormControl('', Validators.required)\n    });\n  }\n\n\n\n  enviar() {\n\n    const nomeControl = this.produtoForm.get('nome');\n    const codigoBarrasControl = this.produtoForm.get('codigoBarras');\n    const precoControl = this.produtoForm.get('preco');\n\n    if (codigoBarrasControl && precoControl) {\n      const produto: Partial<IProdutos> = {\n        nome: nomeControl.value ? nomeControl.value : undefined,\n        codigoBarras: codigoBarrasControl.value ? +codigoBarrasControl.value : undefined,\n        preco: precoControl.value ? +precoControl.value : undefined\n      };\n\n      console.log(produto);return\n\n\n      this.produtosService.cadastrarProdutos(produto).subscribe(\n        (result) => {\n          Swal.fire('Confirmado', 'Produto cadastrado com sucesso', 'success');\n          console.log(result);\n        },\n        (error) => {\n          const { message } = error;\n          console.error(error);\n\n          Swal.fire('ALGO ESTÁ ERRADO', message, 'error');\n        }\n      );\n    }\n  }\n\n\n}\n","<h1 class=\"mt-3 mb-3\">Cadastrar Produtos</h1>\n<form [formGroup]=\"produtoForm\" (submit)=\"enviar()\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"mb-3\">\n          <label for=\"nome\" class=\"form-label\">Nome do Produto</label>\n          <input type=\"text\" class=\"form-control\" id=\"nome\" formControlName=\"nome\">\n          <label for=\"idade\" class=\"form-label\">codigoBarras</label>\n          <input type=\"number\" class=\"form-control\" id=\"codigoBarras\" formControlName=\"codigoBarras\">\n          <label for=\"idade\" class=\"form-label\">Preço</label>\n          <input type=\"number\" class=\"form-control\" id=\"preco\" formControlName=\"preco\">\n        </div>\n      </div>\n      <div class=\"col\">\n      </div>\n    </div>\n    <a class=\"btn btn-secondary me-1\" routerLink=\"/produtos\">Voltar</a>\n    <button class=\"btn btn-primary\" type=\"submit\" >Confirmar</button>\n  </div>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}